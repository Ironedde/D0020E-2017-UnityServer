extends layout

block content
  script(src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js")
  script(src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.7.3/socket.io.js")
  script(src="/javascripts/socketTest.js")
  .container
    .row
      .col-md-6.col-sm-12
        div(style="height:480px")
        canvas#imageHere(width='640', height='480', style='position: absolute; left: 0; top: 0; z-index: 0;')
        canvas#drawHere(width='640', height='480', style='position: absolute; left: 0; top: 0; z-index: 1;')
    .row
      .col-md-3
        div#log(style="border: 2px solid #bbb;background: #f1f1f1;width:100%;height:200px;overflow: auto")
          ul#logEntries(style="list-style-type: none;padding-left:0px")
      .col-md-9
        .row
          button#connect(onclick="connectButtonClick()") connect
          button#refrash(onclick="refreshButtonClick()") refresh
          b Your ID:
          a#your-id
        .row
          select#clients(name="clients")



  script.
    var image = document.getElementById("imageHere");
    var image_ctx = image.getContext("2d");
    var drawPlane = document.getElementById("drawHere");
    var draw_ctx = drawPlane.getContext("2d");



    //image.style.width = drawPlane.style.width = '100%';
    //image.style.height = drawPlane.style.height = '200px';

    //image.width = image.offsetWidth;
    //drawPlane.height = drawPlane.offsetHeight;

    image_ctx.font = draw_ctx.font = "12px Arial";

    var imageObj = new Image();
    imageObj.onload = function(){
        image_ctx.drawImage(imageObj,0,0);
    }
    imageObj.src = 'http://www.just4cats.org/images/cats_012.jpg';


    draw_ctx.fillStyle = "rgba(0, 90, 255, 0.63)";
    draw_ctx.fillRect(0, 0, 640, 480);

    /////////////////////////////
    var canvas, ctx, flag = false,
        prevX = 0,
        currX = 0,
        prevY = 0,
        currY = 0,
        dot_flag = false;

    var x = "white",
        y = 2;

    var w = 0, h = 0;

    function init() {
        canvas = drawPlane;
        ctx = draw_ctx;
        w = canvas.width;
        h = canvas.height;

        canvas.addEventListener("mousemove", function (e) {
            findxy('move', e)
        }, false);
        canvas.addEventListener("mousedown", function (e) {
            findxy('down', e)
        }, false);
        canvas.addEventListener("mouseup", function (e) {
            findxy('up', e)
        }, false);
        canvas.addEventListener("mouseout", function (e) {
            findxy('out', e)
        }, false);
        console.log("setting up subscription");
        signalingChannel.onSubscription = function(data) {
            ctx.beginPath();
            ctx.moveTo(data.prevX * w, data.prevY * h);
            ctx.lineTo(data.currX * w, data.currY * h);
            ctx.strokeStyle = x;
            ctx.lineWidth = y;
            ctx.stroke();
            ctx.closePath();
        };
    }

    function findxy(res, e) {

        var rect = drawPlane.getBoundingClientRect();
        var clickX = e.clientX - rect.left;
        var clickY = e.clientY - rect.top;

         if (res == 'down') {
            $("#logEntries").append("<li>> (++:++) Clicked ["+(clickX)+","+(clickY)+"]</li>")
            prevX = currX;
            prevY = currY;
            currX = clickX;
            currY = clickY;

            flag = true;
            dot_flag = true;
            if (dot_flag) {
                ctx.beginPath();
                ctx.fillStyle = x;
                ctx.fillRect(currX, currY, 2, 2);
                ctx.closePath(); // Once again, translate so that the target coordinate system is within [0, 1]
                signalingChannel.addLine(currX / w, currY / h, (currX+2) / w, (currY+2) / h);
                dot_flag = false;
            }
        }
        if (res == 'up' || res == "out") {
            flag = false;
        }
        if (res == 'move') {
            if (flag) {
                prevX = currX;
                prevY = currY;
                currX = clickX;
                currY = clickY;
                draw();
            }
        }
    }

    function draw() {
        ctx.beginPath();
        ctx.moveTo(prevX, prevY);
        ctx.lineTo(currX, currY);
        ctx.strokeStyle = x;
        ctx.lineWidth = y;
        ctx.stroke();
        ctx.closePath(); // Translate coordinates to fit the [0, 1] range
        signalingChannel.addLine(prevX / w, prevY / h, currX / w, currY / h);
    }

    function connectButtonClick() {
        var d = $("#clients").val();
        console.log(d);
        signalingChannel.subscribe(d);

    }
    function refreshButtonClick() {
      signalingChannel.getAvailableUsers();
      window.setTimeout(function () {
          refreshClientList();
      }, 2000);
    }
    function refreshClientList(){
        document.getElementById("your-id").innerHTML = signalingChannel.myID;
        var clients = document.getElementById("clients");
        while (clients.firstChild) {
            clients.removeChild(clients.firstChild);
        }
        signalingChannel.clients.forEach(function(item,index){
            var option = document.createElement("option");
            option.text = item;
            option.value = item;
            document.getElementById("clients").appendChild(option);
        });

    }
    $(document).ready(function () {
        init();
        signalingChannel.makePublisher();
        signalingChannel.onNewClient = function (e) {
            refreshClientList();
            //alert(e.message);
        }
        refreshButtonClick();
    });